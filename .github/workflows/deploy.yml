name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build Frontend
        run: |
          cd mcp_all_files/home/ubuntu/mcp_all_files/ebook-store
          pnpm install
          pnpm run build
          cp dist/index.html dist/404.html
          # Ensure base files are in place
          touch dist/.nojekyll
          cp public/* dist/ || true

      - name: Build Admin Dashboard
        run: |
          cd mcp_all_files/home/ubuntu/mcp_all_files/ebook-admin-dashboard
          pnpm install
          pnpm run build
          mkdir -p ../ebook-store/dist/admin
          cp -r dist/* ../ebook-store/dist/admin/
          # Ensure admin has 404 page
          cp ../ebook-store/dist/404.html ../ebook-store/dist/admin/404.html

      - name: Configure site
        run: |
          cd mcp_all_files/home/ubuntu/mcp_all_files/ebook-store/dist
          # Fix asset paths in all HTML files
          find . -type f -name "*.html" -exec sed -i 's/\/assets/\.\/assets/g' {} +
          find . -type f -name "*.html" -exec sed -i 's/\/src/\.\/src/g' {} +
          find . -type f -name "*.html" -exec sed -i 's/href="\//href="\.\//g' {} +
          find . -type f -name "*.html" -exec sed -i 's/src="\//src="\.\//g' {} +
          
          # Create necessary files
          echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0; url=/"></head></html>' > 404.html
          
          # Create headers file for CDN and security
          cat > _headers << EOL
          /*
            Cache-Control: public, max-age=31536000
            X-Frame-Options: DENY
            X-Content-Type-Options: nosniff
            X-XSS-Protection: 1; mode=block
            Referrer-Policy: strict-origin-when-cross-origin
            Permissions-Policy: camera=(), microphone=(), geolocation=()
          EOL
          
          # Create redirects file
          cat > _redirects << EOL
          /* /index.html 200
          /admin/* /admin/index.html 200
          EOL

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: mcp_all_files/home/ubuntu/mcp_all_files/ebook-store/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v2

      - name: Verify deployment
        run: |
          echo "Deployed to: \${{ steps.deploy.outputs.page_url }}"
